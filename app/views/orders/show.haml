.container.mt-3
  %h4.text-center ORDER DETAILS
  .row.mt-3
    .col-4
      Name:
    .col-8
      = @order.name
  .row
    .col-4
      Address:
    .col-8
      #{@order.address_one},
      #{@order.address_two if @order.address_two?}
      #{@order.postcode}
      #{@order.city},
      #{@order.state}
  .row
    .col-4
      Phone No:
    .col-8
      = @order.phone_number
  - @order.order_products.any? && @order.order_products.each do |op|
    %hr
    .row.my-3
      .col-8
        %p.my-0= op.product.name
        %p.my-0 #{op.quantity} #{op.quantity == 1 ? 'unit' : 'units' }
        %p.my-0 Per unit: #{number_to_currency(op.product.price, unit: 'RM')}
      .col-4
        = image_tag(op.product.image_url, class: 'img-fluid rounded')
    .text-right Subtotal: #{number_to_currency(op.line_price, unit: 'RM')}
  %hr
    .row.my-3
      .col-8
        %p.my-0
          %strong GRAND TOTAL
      .col-4
        %p.my-0
          %strong= number_to_currency(@order.price, unit: 'RM')

- unless @order.paid?
  .upload.mt-3.pb-3
    - if @order.payment_proof?
      .container
        %h4.text-center.py-3 PROOF OF PAYMENT AWAITING SELLER CONFIRMATION
        = image_tag(@order.payment_proof_url, class: 'img-fluid')
    - else
      .container
        = form_for(@order) do |f|
          %h4.text-center.py-3 UPLOAD PROOF OF PAYMENT
          .form-group
            = f.file_field :payment_proof, class: 'form-control'
            .text-center.mt-3
              = f.submit 'Submit', class: 'btn btn-default btn-upload'
- unless @order.payment_proof?
  .payment.pb-3
    - if @order.paid?
      .container
        %h4.text-center.py-3 PAYMENT COMPLETED AND AWAITING DELIVERY
    - else
      .container
        %h4.text-center.py-3 OR PAY HERE
        = form_for(@order, url: bill_order_path(@order), method: :put) do |f|
          #dropin
          .text-center.mt-3
            = f.submit 'Submit', class: 'btn btn-default btn-upload'

= content_for :extra_javascript do
  :javascript
    if (gon && gon.client_token) {
      braintree.setup(gon.client_token, 'dropin', { container: 'dropin' });
    }
